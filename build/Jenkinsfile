pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '30'))
  }

  triggers {
    cron 'H 6 * * *'
  }

  parameters {
    string(name: 'engineSource', defaultValue: 'https://product.ivyteam.io', description: 'Engine page url')
    string(name: 'deployToEngineUrl', defaultValue: 'https://nightly.demo.ivyteam.io', description: 'Deploy to engine (e.g. see: https://demo.ivyteam.io)')
  }

  stages {
    stage('check editorconfig') {
      steps {
        script {
          docker.image('mstruebing/editorconfig-checker').inside {
            warnError('There are some editor errors') {
              sh 'ec -no-color'
            } 
          }
        }
      }
    }

    stage('build') {
      steps {
        script {
          def common = load 'build/build.groovy'
          common.build();
          archiveArtifacts '**/target/*.iar, **/target/*.jar'
        }
      }
    }

    stage('deploy to engine') {
      when {
        expression { !params.deployToEngineUrl.isEmpty() }
      }
      steps {
        script {
          def deployToEngineUrl = params.deployToEngineUrl
          def deployApplicationName = ("dev-workflow-ui_" + env.BRANCH_NAME.replaceAll("%2F","_").replaceAll("/","_").replaceAll("\\.","_")).take(40)
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            sh "curl -X POST ${deployToEngineUrl}/system/api/apps/${deployApplicationName} -u admin:admin -H 'X-Requested-By: curl' -F fileToDeploy=@maven/deploy/target/dev-workflow-ui-deploy.zip"
            currentBuild.description = "<a href='${deployToEngineUrl}/${deployApplicationName}/faces/view/dev-workflow-ui/home.xhtml'>&raquo; Demo</a>"
          }
        }
      }
    }
  }
}
